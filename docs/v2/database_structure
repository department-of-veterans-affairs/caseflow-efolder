Things to consider:
1. We will start with the simplest solution possible.
2. We will probably deprecate eX stats page so we will not worry about it at this point.
3. Table names are different from the previous version. This will make it easier to create new models/DB tables without conflicts.
4. Deprecate `searches` table.
5. We don't need to expire `manifests`. We will have `user_manifests` and `records` tables that will have all the necessary
information to answer questions such as "this user downloaded XYZ documents on XXX date".
6. If we miss something now, don't panic, we can add later as we move forward

Tables:

```
  create_table "manifests" |t|
    t.string   "file_number"
    t.string   "veteran_last_name"
    t.string   "veteran_first_name"
    t.string   "veteran_last_four_ssn"
    t.zipfile_size,                 # will be updated based on the changes to the documents
    t.datetime "created_at",
    t.datetime "updated_at",
  end
```

```
  # Having this separately will allow us to start fetching manifests in parallel
  create_table "manifest_statuses" |t|
    t.integer  "manifest_id"
    t.integer  "status",            # success, failed, pending
    t.string "source"               # "VBMS" or "VVA"
    t.datetime "fetched_at"         # we will use this field to determine if manifest has expired
    t.datetime "created_at",
    t.datetime "updated_at",
  end
```

```
# For audit purposes, both the API and the UI will use this table.
  create_table "user_manifests" |t|
    t.integer  "manifest_id"
    t.integer  "user_id"
    t.integer  "status",         # UI specific statuses: fetching_manifest, no_documents, etc
    t.datetime "created_at",     # We can use this field to display user's history in the UI
    t.datetime "updated_at",
  end
```

```
 create_table "records" do |t|
    t.integer  "manifest_id"
    t.integer  "status",  default: 0
    t.string   "external_document_id"
    t.string   "mime_type"
    t.datetime "received_at"          # VBMS and VVA timestamp
    t.string   "type_description"
    t.string   "type_id"              # will be deprecated when we move to the VBMS new eFolder API
    t.integer  "size"                 # to keep track of document sizes
    t.string   "vva_jro"              # VVA metadata
    t.string   "vva_source"           # VVA metadata
    t.datetime "created_at",
    t.datetime "updated_at",
  end
```

Steps to Implement:
1) Create our new DB structure with associated models
2) Point the API to this new code
