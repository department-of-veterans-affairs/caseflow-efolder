version: 2.1
jobs:
  rake:
    docker:
      # The first image listed is the image that all steps run inside of.
      # This can be modified by steps, or can be built as a separate
      # customized container.
      - image: circleci:2.5.3-node-browsers
        environment:
          - RAILS_ENV: test
          - BUNDLE_PATH: vendor/bundle
          - POSTGRES_HOST: localhost
          - POSTGRES_USER: root
      # This is the circleci provided Postgres container. We can
      # configure it via environment variables.
      - image: circleci/postgres:9.5
        environment:
          - POSTGRES_USER: root
            POSTGRES_DB: caseflow_efolder_test


      # This is the circleci provided Redis container.
      - image: circleci/redis:4.0.10
    parallelism: 5
    resource_class: large
    steps:
      - checkout

      - run:
          name: Ruby version
          command: ruby -v

      - restore_cache:
          keys:
            - vendor-bundle-v2-{{ arch }}-{{ checksum ".ruby-version" }}-{{ checksum "Gemfile.lock" }}

      - run:
          name: Bundle install
          command: bundle install --path vendor/bundle

      - save_cache:
          key: vendor-bundle-v2-{{ arch }}-{{ checksum ".ruby-version" }}-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/project/vendor/bundle

      - run:
          name: Database setup
          command: |
            ~/project/ci-bin/capture-log "bundle exec rake db:create"
            ~/project/ci-bin/capture-log "bundle exec rake db:schema:load"

      - run:
          name: Rake
          command: |
            ~/project/ci-bin/capture-log "bundle exec rake"


workflows:
  version: 2
  build:
    jobs:
      - rake
