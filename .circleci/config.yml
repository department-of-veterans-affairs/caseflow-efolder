version: 2.1
jobs:
  rake:
    docker:
      # The first image listed is the image that all steps run inside of.
      # This can be modified by steps, or can be built as a separate
      # customized container.
      - image: 008577686731.dkr.ecr.us-gov-west-1.amazonaws.com/circleci:2.5.3-node-browsers
        environment:
          - DBUS_SESSION_BUS_ADDRESS: /dev/null
          - RAILS_ENV: test
          - BUNDLE_PATH: vendor/bundle
          - POSTGRES_HOST: localhost
          - POSTGRES_USER: root
      # This is the circleci provided Postgres container. We can
      # configure it via environment variables.
      - image: circleci/postgres:11.7
        environment:
          - POSTGRES_USER: root
            POSTGRES_PASSWORD: password
            POSTGRES_DB: caseflow_efolder_test


      # This is the circleci provided Redis container.
      - image: circleci/redis:4.0.10

      # localstack image
      - image: localstack/localstack:0.12.5
        environment:
          - SERVICES=sqs

    parallelism: 1
    resource_class: large
    steps:
      - checkout

      - run:
          name: Ruby version
          command: ruby -v

      - restore_cache:
          keys:
            - vendor-bundle-v2-{{ arch }}-{{ checksum ".ruby-version" }}-{{ checksum "Gemfile.lock" }}

      - run:
          name: Bundle install
          command: bundle install --path vendor/bundle

      - save_cache:
          key: vendor-bundle-v2-{{ arch }}-{{ checksum ".ruby-version" }}-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/project/vendor/bundle

      - restore_cache:
          name: Restore yarn cache
          key: dot-cache-yarn-v2-{{ arch }}-{{ checksum "client/yarn.lock" }}

      - run:
          name: yarn install
          command: ~/project/ci-bin/capture-log "cd client && yarn install --frozen-lockfile"

      - save_cache:
          key: dot-cache-yarn-v2-{{ arch }}-{{ checksum "client/yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Yarn build
          command: yarn run build
          working_directory: ~/project/client

      - run:
          name: Database setup
          command: |
            ~/project/ci-bin/capture-log "RAILS_ENV=test bundle exec rake db:create"
            ~/project/ci-bin/capture-log "RAILS_ENV=test bundle exec rake db:schema:load"

      - run:
          name: Update Chrome/ChromeDriver
          command: |
            wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install google-chrome-stable
            bundle exec rake webdrivers:chromedriver:remove
            bundle exec rake webdrivers:chromedriver:update

      - run:
          name: RSpec
          command: |
            mkdir -p ~/test-results/rspec
            ~/project/ci-bin/capture-log "make -f Makefile.example test | tee ~/test-results/rspec/rspec.out"

      - store_test_results:
          name: Store test results as summary
          path: ~/test-results

      - store_artifacts:
          name: Store test results as artifact
          path: ~/test-results

      - store_artifacts:
          name: Store capybara screenshots
          path: ~/project/tmp/capybara

      - store_artifacts:
          name: Store rails test log
          path: ~/project/log/test.log

      - run:
          name: Lint
          command: |
            ~/project/ci-bin/capture-log "make -f Makefile.example lint"

      - run:
          name: Security
          command: |
            ~/project/ci-bin/capture-log "make -f Makefile.example security"


workflows:
  version: 2
  build:
    jobs:
      - rake
